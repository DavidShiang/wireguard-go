name: Build and Release Windows Executable

on:
  push :
    branches: [ "master" ]

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Build WireGuard-go (using Makefile)
        run: make wireguard-go  # Use the Makefile!

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-go-windows
          path: wireguard-go.exe # Assuming the Makefile builds to the root directory
          retention-days: 7

  release:
    name: Create/Update Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: wireguard-go-windows

      - name: Get Release Tag
        id: get_release_tag
        run: |
          RELEASE_TAG="${GITHUB_REF#refs/tags/}"
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Create/Update Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.release_tag }}
          release_name: Release v${{ env.release_tag }}
          body: |
            Windows executable for WireGuard-go.

            ```
            # Add your release notes here
            ```
          files: wireguard-go.exe
        if: github.event_name == 'release' && github.event.action == 'published'
